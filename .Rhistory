?lapply
?rnorm
x<- list (a=1:5, b= rnorm(10))
x
lapply(x,mean)
x<- list (a=1:100, b= rnorm(10))
lapply(x,mean)
?runif
runif(4)
runif(4)
runif(4)
runif(4, min=0, max=10)
x<- 1:10
lapply (x, runif, min=0, max=10)
str (apply)
?rowmeans
?rowMeans
str (tapply)
?tapply
?gl
library(datasets)
data(iris)
?iris
iris
apply(iris,mean)
apply(iris,1, mean)
apply(iris,1, mean)
?mean
apply(iris,1, mean, na.rm = TRUE)
lapply(iris, mean)
lapply(iris, mean, na.rm = TRUE)
apply(iris[, 1:4], 2, mean)
apply(iris, 1, mean)
apply(iris[1:4,], 1, mean)
apply(iris, 1, mean)
apply(iris, 2, mean)
debug(ls)
ls
ls()
close
close()+
a
quit
quit()
debug()
"."
?debug
clear()
exit()
license
license()
library("MASS")
set.seed(123456)
### building a toy data set ###
## number of observations
n <- 500
## good predictor
good_x <- rnorm(n = n, mean = 0.5, sd = 1)
## noisy variable, which is highly correlated with good predictor
noisy_x <- good_x + rnorm(n, mean = 0, sd = 1.2)
## response variable linear to good_x plus random error
y <- 0.7 * good_x + rnorm(n, mean = 0, sd = 0.11)
## variables with no relation to response 10 variables, 5 are always
## correlated
Sigma_diag <- matrix(0.6, nrow = 5, ncol = 5)
zeros <- matrix(0, nrow = 5, ncol = 5)
Sigma <- rbind(cbind(Sigma_diag, zeros), cbind(zeros, Sigma_diag))
diag(Sigma) <- 1
random_X <- mvrnorm(n = n, mu = rep(0, 10), Sigma = Sigma)
colnames(random_X) <- paste("useless", 1:10, sep = "_")
## binding all together
dat <- data.frame(y = y, good_x, noisy_x, random_X)
## relationship between y and good_x and noisy_x
par(mfrow = c(1, 2))
plot(y ~ good_x, data = dat)
plot(y ~ noisy_x, data = dat)
Sigma
?par
## pca
prin <- princomp(dat[-1], cor = TRUE)
## results visualized
par(mfrow = c(1, 2))
screeplot(prin, type = "l")
loadings(prin)
dat_pca <- as.data.frame(prin$scores)
dat_pca$y <- y
plot(y ~ Comp.3, data = dat_pca)
## linear model detects good_x rightfully as only good significant
## predictor
mod <- lm(y ~ ., dat)
summary(mod)
?lm
#con = url ("http://biostat.jhsph.edu/~jleek/contact.html")
con = url ("file:///Users/jguerra/Downloads/search.htm")
#con = url ("http://www.marca.com",  open="r")
htmlCode = readLines(con)
close(con)
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
#Answer:
#Web page down
##Register an application with the Github API here https://github.com/settings/applications.
# Access the API to get information on your instructors repositories
# (hint: this is the url you want "https://api.github.com/users/jtleek/repos").
# Use this data to find the time that the datasharing repo was created.
# What time was it created?
# This tutorial may be useful (https://github.com/hadley/httr/blob/master/demo/oauth2-github.r).
# You may also need to run the code in the base R package and not R studio.
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. Register an application at https://github.com/settings/applications
#    Insert your values below - if secret is omitted, it will look it up in
#    the GITHUB_CONSUMER_SECRET environmental variable.
#
#    Use http://localhost:1410 as the callback url
myapp <- oauth_app("myOauthAPP", key = "17601368c08ec426c177", secret = "9a9b4f8e69dc1f75cfb3744c9fe75bc90e52611d")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
content2 = content (req, as="parsed")
tidy_data <- fromJSON(toJSON(content2))
tidy_data$created_at[1]
library
library(jsonlite)
content2 = content (req, as="parsed")
tidy_data <- fromJSON(toJSON(content2))
tidy_data
names (tidy_Data)
names (tidy_data)
tidy_data$created_at
jsonData$owner
tidy_data$owner
names(tidy_data)
names(tidy_data$owner)
names(tidy_data$name)
names(tidy_data$id)
tidy_data[id]
tidy_data$name
tidy_data$name[5]
tidy_data$name[5]$created_at
tidy_data$created_at[5]
tidy_data$name == "datasharing"
tidy_data$created_at[tidy_data$name == "datasharing"]
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
data <- read.fwf("./data//getdata-wksst8110.for", widths = c(33, 3, 80), sep = "\n")
setwd("~/Coursera-rep/Coursera-GCLD")
data <- read.fwf("./data//getdata-wksst8110.for", widths = c(33, 3, 80), sep = "\n")
data
head (data)
data <- read.fwf("./data//getdata-wksst8110.for", widths = c(33, 3, 80), sep = "\n", skip = 4)
head (data)
data <- read.fwf("./data//getdata-wksst8110.for", widths = c(9, 3, 80, 1, 1, 1, 1, 1, 1), sep = "\n", skip = 5)
head(data)
data <- read.fwf("./data//getdata-wksst8110.for", widths = c(10, 4, 4, 4, 4, 4, 4, 4, 4), sep = "\n", skip = 5)
data <- read.fwf("./data//getdata-wksst8110.for", widths = c(9, 3, 80, 1, 1, 1, 1, 1, 1), sep = "\n", skip = 5)
head(data)
data <- read.fwf("./data//getdata-wksst8110.for", widths = c(10, 4, 4, 4, 4, 4, 4, 4, 4), sep = "\t", skip = 5)
data <- read.fwf("./data//getdata-wksst8110.for", widths = c(9, 3, 80, 1, 1, 1, 1, 1, 1), sep = "\n", skip = 5)
head(data)
data <- read.fwf("./data//getdata-wksst8110.for", widths = c(10, 4, 4, 4, 4, 4, 4, 4, 4), sep = "\t", skip = 5)
head(data)
sum(data[,4])
?sum
data[,4]
data <- read.fwf("./data//getdata-wksst8110.for", widths = c(10, 4, 4, 4, 4, 4, 4, 4, 4), sep = "\t", skip = 5)
head(data)
?read.fwf
data <- read.fwf("./data//getdata-wksst8110.for", widths = c(10, -4, 4, 4, 4, 4, 4, 4, 4), sep = "\t", skip = 5)
head(data)
data <- read.fwf("./data//getdata-wksst8110.for", widths = c(10, 5, 5, 5, 5, 5, 5, 5, 5), sep = "\t", skip = 5)
head(data)
data <- read.fwf("./data//getdata-wksst8110.for", widths = c(10, 5, 5, 5, 5, 5, 5, 5, 5), sep = "\n", skip = 5)
head(data)
data <- read.fwf("./data//getdata-wksst8110.for", widths = c(10, 5, 5, 5, 5, 5, 5, 5, 5),  skip = 5)
head(data)
data <- read.fwf("./data//getdata-wksst8110.for", widths = c(11, 4, -1, 3, 5, 5, 5, 5, 5),  skip = 5)
head(data)
data <- read.fwf("./data//getdata-wksst8110.for", widths = c(11, -5, 4, -1, 3, 5, 5, 5, 5, 5),  skip = 5)
head(data)
data <- read.fwf("./data//getdata-wksst8110.for", widths = c(10, -5, 4, -1, 3, 5, 5, 5, 5, 5),  skip = 5)
head(data)
data <- read.fwf("./data//getdata-wksst8110.for", widths = c(10, -5, 4, -1, 3, -5, 4, -1, 3, 5),  skip = 5)
data <- read.fwf("./data//getdata-wksst8110.for", widths = c(10, -5, 4, -1, 3, 5, 5, 5, 5, 5),  skip = 5)
head(data)
data <- read.fwf("./data//getdata-wksst8110.for", widths = c(10, -5, 4, -1, 3, -4, 4, -1, 3, 5),  skip = 5)
head(data)
data <- read.fwf("./data//getdata-wksst8110.for", widths = c(10, -5, 4, -1, 3, -5, 4, -1, 3, 5),  skip = 5)
head(data)
data[,4]
cumsum(data[,4])
head (data)
data <- read.fwf("./data//getdata-wksst8110.for", widths = c(10, -5, 4, -1, 3, -5, 4, -1, 3, 5),  skip = 4)
head(data)
sum(data[,4])
